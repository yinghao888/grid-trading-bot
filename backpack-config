#!/bin/bash

# 颜色输出函数
print_green() {
    echo -e "\033[32m$1\033[0m"
}

print_blue() {
    echo -e "\033[34m$1\033[0m"
}

print_red() {
    echo -e "\033[31m$1\033[0m"
}

print_yellow() {
    echo -e "\033[33m$1\033[0m"
}

CONFIG_DIR="$HOME/.backpack_bot"
MENU_SCRIPT="$CONFIG_DIR/menu.py"

# 是否为直接配置模式
DIRECT_CONFIG=false

# 检测是否使用systemd
if [ -f "$HOME/.config/systemd/user/backpack-bot.service" ]; then
    USE_SYSTEMD=true
else
    USE_SYSTEMD=false
fi

# 处理命令行参数
if [ "$1" == "help" ] || [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
    print_blue "Backpack 交易机器人配置工具"
    print_blue "用法:"
    print_blue "  backpack-config           - 启动交互式配置菜单"
    print_blue "  backpack-config config    - 直接编辑配置文件"
    print_blue "  backpack-config start     - 启动交易机器人"
    print_blue "  backpack-config stop      - 停止交易机器人"
    print_blue "  backpack-config status    - 查看交易机器人状态"
    print_blue "  backpack-config logs      - 查看交易机器人日志"
    exit 0
fi

if [ "$1" == "config" ]; then
    DIRECT_CONFIG=true
fi

if [ "$1" == "start" ]; then
    print_blue "正在启动交易机器人..."
    if [ "$USE_SYSTEMD" = true ]; then
        systemctl --user start backpack-bot || print_red "启动失败！"
    else
        pm2 start backpack_bot || print_red "启动失败！"
    fi
    exit $?
fi

if [ "$1" == "stop" ]; then
    print_blue "正在停止交易机器人..."
    if [ "$USE_SYSTEMD" = true ]; then
        systemctl --user stop backpack-bot || print_red "停止失败！"
    else
        pm2 stop backpack_bot || print_red "停止失败！"
    fi
    exit $?
fi

if [ "$1" == "status" ]; then
    print_blue "交易机器人状态:"
    if [ "$USE_SYSTEMD" = true ]; then
        systemctl --user status backpack-bot || print_yellow "交易机器人未运行"
    else
        pm2 list | grep backpack_bot || print_yellow "交易机器人未运行"
    fi
    exit $?
fi

if [ "$1" == "logs" ]; then
    print_blue "交易机器人日志:"
    if [ "$USE_SYSTEMD" = true ]; then
        journalctl --user -u backpack-bot --lines=50 || print_red "无法获取日志！"
    else
        pm2 logs backpack_bot --lines 50 || print_red "无法获取日志！"
    fi
    exit $?
fi

# 检查配置目录是否存在
if [ ! -d "$CONFIG_DIR" ]; then
    print_yellow "配置目录不存在，正在创建..."
    mkdir -p "$CONFIG_DIR"
    
    # 需要执行安装脚本
    print_red "未找到配置文件，请先执行安装脚本 improved_install.sh"
    exit 1
fi

# 检查配置文件是否存在并尝试创建空配置
if [ ! -f "$CONFIG_DIR/config.ini" ]; then
    print_yellow "配置文件不存在，创建初始配置..."
    
    # 创建初始配置文件
    cat > "$CONFIG_DIR/config.ini" << EOF
[api]
api_key = YOUR_API_KEY
api_secret = YOUR_API_SECRET
base_url = https://api.backpack.exchange
ws_url = wss://ws.backpack.exchange

[trading]
symbols = ETH_USDC_PERP
position_limit = 0.001
funding_threshold = 0.0001
check_interval = 300
leverage = 20
profit_target = 0.0002
stop_loss = 0.1
cooldown_minutes = 30

[telegram]
bot_token = 7685502184:AAGxaIdwiTr0WpPDeIGmc9fgbdeSKxgXtEw
chat_id = 
EOF
    print_green "已创建默认配置文件"
fi

# 直接编辑配置文件模式
if [ "$DIRECT_CONFIG" == "true" ]; then
    CONFIG_FILE="$CONFIG_DIR/config.ini"
    print_blue "编辑配置文件 $CONFIG_FILE"
    
    # 根据环境选择合适的编辑器
    if [ -n "$EDITOR" ]; then
        $EDITOR "$CONFIG_FILE"
    elif command -v nano &> /dev/null; then
        nano "$CONFIG_FILE"
    elif command -v vim &> /dev/null; then
        vim "$CONFIG_FILE"
    elif command -v vi &> /dev/null; then
        vi "$CONFIG_FILE"
    else
        print_red "未找到可用的文本编辑器，请手动编辑配置文件: $CONFIG_FILE"
        cat "$CONFIG_FILE"
    fi
    
    print_green "配置已更新！"
    print_yellow "如需启动交易机器人，请运行: backpack-config start"
    exit 0
fi

# 检查菜单脚本是否存在
if [ ! -f "$MENU_SCRIPT" ]; then
    print_red "菜单脚本不存在，尝试下载..."
    REPO_URL="https://raw.githubusercontent.com/yinghao888/grid-trading-bot/main"
    curl -s -o "$MENU_SCRIPT" "$REPO_URL/menu.py"
    
    if [ ! -f "$MENU_SCRIPT" ] || [ ! -s "$MENU_SCRIPT" ]; then
        print_red "无法下载菜单脚本，请手动下载或重新执行安装程序"
        exit 1
    fi
    
    chmod +x "$MENU_SCRIPT"
    print_green "菜单脚本已下载"
fi

# 检查Python3是否可用
if ! command -v python3 &> /dev/null; then
    print_red "未检测到 Python3，请确保已安装 Python3"
    exit 1
fi

# 进入配置目录并启动菜单
cd "$CONFIG_DIR"
print_blue "启动 Backpack 交易机器人配置菜单..."

# 直接运行Python脚本
python3 menu.py 